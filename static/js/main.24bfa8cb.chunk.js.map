{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","Default","sortBy","setSortBy","isReversed","setIsReversed","goods","goodsCopy","ABC","sort","goodA","goodB","localeCompare","Length","length","reverse","changeGoodsOrder","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,UAAAA,E,gBAAAA,E,YAAAA,M,KAML,IA+BaE,EAAgB,WAC3B,MAA4BC,mBAASH,EAASI,SAA9C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EAlCiB,SACvBA,EACAJ,EACAE,GAEA,IAAMG,EAAS,YAAOD,GAEtB,GAAIJ,EACF,OAAQA,GACN,KAAKL,EAASW,IACZD,EAAUE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAErD,MAEF,KAAKd,EAASgB,OACZN,EAAUE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAa5D,OAJIV,GACFG,EAAUQ,UAGLR,EAMOS,CAAiBlB,EAAiBI,EAAQE,GAOxD,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBACZ,CACE,WAAYjB,IAAWL,EAASW,MAEpCY,QAAS,kBAAMjB,EAAUN,EAASW,MANpC,iCAUA,wBACEU,KAAK,SACLD,UAAWE,IAAG,oBACZ,CACE,WAAYjB,IAAWL,EAASgB,SAEpCO,QAAS,kBAAMjB,EAAUN,EAASgB,SANpC,4BAWA,wBACEK,KAAK,SACLD,UAAWE,IAAG,oBACZ,CACE,YAAaf,IAEjBgB,QAAS,kBAAMf,GAAeD,IANhC,sBAWEF,GAAUE,IACV,wBACEc,KAAK,SACLD,UAAU,4BACVG,QA5CiB,WACzBf,GAAc,GACdF,EAAUN,EAASI,UAuCb,sBAUJ,6BACGK,EAAMe,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCjHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.24bfa8cb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  ABC = 'ABC',\n  Length = 'length',\n  Default = '',\n}\n\nconst changeGoodsOrder = (\n  goods: typeof goodsFromServer,\n  sortBy: string,\n  isReversed: boolean,\n) => {\n  const goodsCopy = [...goods];\n\n  if (sortBy) {\n    switch (sortBy) {\n      case SortType.ABC:\n        goodsCopy.sort((goodA, goodB) => goodA.localeCompare(goodB));\n\n        break;\n\n      case SortType.Length:\n        goodsCopy.sort((goodA, goodB) => goodA.length - goodB.length);\n\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  if (isReversed) {\n    goodsCopy.reverse();\n  }\n\n  return goodsCopy;\n};\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState(SortType.Default);\n  const [isReversed, setIsReversed] = useState(false);\n  const goods = changeGoodsOrder(goodsFromServer, sortBy, isReversed);\n\n  const handleResetOnClick = () => {\n    setIsReversed(false);\n    setSortBy(SortType.Default);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info',\n            {\n              'is-light': sortBy !== SortType.ABC,\n            })}\n          onClick={() => setSortBy(SortType.ABC)}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          className={cn('button is-success',\n            {\n              'is-light': sortBy !== SortType.Length,\n            })}\n          onClick={() => setSortBy(SortType.Length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning',\n            {\n              'is-light': !isReversed,\n            })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortBy || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleResetOnClick}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}